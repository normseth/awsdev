{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates SNS/SQS infrastructure for event notifications, and a VPC with a single subnet.  Subsequent stacks are expected to provision CI pipeline servers into this subnet.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    
    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "198.162.93.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "OperatorEmail": {
      "Description": "Email address to notify if there are any scaling operations",
      "Type": "String",
      "Default": "nikormseth@level11.com"
    },

    "ASGQueueUser": {
      "Description": "AWS user to receive events via SQS",
      "Type": "String",
      "Default": "ChefUser"
    },

    "AZ": {
      "Description": "Availability zone in which to create subnet",
      "Type": "String",
      "Default": "us-west-2c"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-west-2"      : { "AMI" : "ami-fa9cf1ca" }
    }
  },

  "Resources" : {

    "NotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "AutoScaleEvents",
        "Subscription": [ 
          { "Endpoint" : { "Ref": "OperatorEmail" }, "Protocol": "email" }, 
          { "Endpoint" : { "Fn::GetAtt" : ["ASGQueue", "Arn"]}, "Protocol" : "sqs" }
        ]
      }
    },

    "ASGQueue" : {
      "Type" : "AWS::SQS::Queue",
      "Properties" : {
        "QueueName": "AutoScaleEventQueue"
      }
    },

    "ASGQueueGroup" : {
    "Type" : "AWS::IAM::Group",
    "Properties" : {
      "Policies": [ {
          "PolicyName": "MyQueueGroupPolicy",
          "PolicyDocument": { "Statement": [
            {
              "Effect":"Allow",
              "Action":[
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"  
              ],
              "Resource":[
                { "Fn::GetAtt" : ["ASGQueue", "Arn"]}
              ]
            }
          ]}
        }]
      }
    },

    "AddUserToASGQueueGroup" : {
      "Type" : "AWS::IAM::UserToGroupAddition",
      "Properties" : {
        "GroupName": {"Ref" : "ASGQueueGroup"},
        "Users" : [{ "Ref" : "ASGQueueUser" }]
      }
    },

    "ASGQueuePolicy" : {
      "Type" : "AWS::SQS::QueuePolicy",
      "Properties" : {
        "PolicyDocument":  {
          "Id":"MyQueuePolicy",
          "Statement" : [
            {
              "Sid":"Allow-SendMessage-To-ASGQueue-From-NotificationTopic",
        "Effect":"Allow",
        "Principal" : {"AWS" : "*"},
        "Action":["sqs:SendMessage"],
        "Resource": "*",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": { "Ref" : "NotificationTopic" }
                }
              }
            }
          ]
        },
        "Queues" : [ {"Ref" : "ASGQueue"} ]
      }
    },

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [ {"Key" : "CFStack", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Subnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AZ" },
        "CidrBlock" : "10.0.0.0/24",
        "Tags" : [ {"Key" : "CFStack", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "CFStack", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "CFStack", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "SubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },

    "SecurityGroup" : {   
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
          {"IpProtocol" : "tcp", "FromPort" : "8443", "ToPort" : "8443", "CidrIp" : { "Ref" : "SSHLocation"}}
         ]
      }
    }
  },

  "Outputs" : {
  }
}

